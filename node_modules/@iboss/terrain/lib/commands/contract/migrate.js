"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const terra_js_1 = require("@terra-money/terra.js");
const config_1 = require("../../config");
const deployment_1 = require("../../lib/deployment");
const signer_1 = require("../../lib/signer");
class ContractMigrate extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(ContractMigrate);
        const connections = config_1.loadConnections(flags["config-path"]);
        const config = config_1.loadConfig(flags["config-path"]);
        const conf = config(flags.network, args.contract);
        // @ts-ignore
        const lcd = new terra_js_1.LCDClient(connections(flags.network));
        const signer = signer_1.getSigner({
            network: flags.network,
            signerId: flags.signer,
            keysPath: flags["keys-path"],
            lcd,
        });
        console.log(config_1.loadRefs(flags["refs-path"])[flags.network][args.contract]);
        const codeId = flags["code-id"] ||
            config_1.loadRefs(flags["refs-path"])[flags.network][args.contract].codeId;
        deployment_1.migrate({
            conf,
            signer,
            contract: args.contract,
            codeId,
            network: flags.network,
            instanceId: flags["instance-id"],
            refsPath: flags["refs-path"],
            lcd: lcd,
        });
    }
}
exports.default = ContractMigrate;
ContractMigrate.description = "Migrate the contract.";
ContractMigrate.flags = {
    network: command_1.flags.string({ default: "localterra" }),
    "config-path": command_1.flags.string({ default: "./config.terrain.json" }),
    "refs-path": command_1.flags.string({ default: "./refs.terrain.json" }),
    "keys-path": command_1.flags.string({ default: "./keys.terrain.js" }),
    "instance-id": command_1.flags.string({ default: "default" }),
    signer: command_1.flags.string({ required: true }),
    "code-id": command_1.flags.integer({
        description: "target code id for migration, can do only once after columbus-5 upgrade",
    }),
};
ContractMigrate.args = [{ name: "contract" }];
